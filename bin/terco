#!/usr/bin/env ruby

# Copyright (c) 2015 Michel Martens
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.

require 'socket'

class Terco
  HOST = "127.0.0.1".freeze
  TMPL = "%s\x81\x80%s%s\x00\x00\x00\x00%s"\
         "\xc0\x0c\x00\x01\x00\x01\x00\x00"\
         "\x00\x3c\x00\x04\x7f\x00\x00\x01".b.freeze

  def initialize(port = 53)
    @sock = UDPSocket.new
    @sock.bind(HOST, port)
  end

  def run
    loop do
      data, addr = @sock.recvfrom(1000)

      packet = sprintf(TMPL, data[0,2], data[4,2], data[4,2], data[12..-1])

      @sock.send(packet, 0, addr[3], addr[1])
    end
  end
end

port = ARGV.fetch(0, 53)

begin
  server = Terco.new(port)
  puts "Listening on port #{port}"
rescue Errno::EACCES
  puts "Couldn't bind to port #{port}."
  exit 1
end

Signal.trap("INT") { exit 0 }

server.run
